name: Deploy

on:
  push:
    branches:
      - main

jobs:
  sync:
    name: Sync Files Across Deploy Targets
    runs-on: ubuntu-latest
    outputs:
      changed: ${{ steps.verify-changed-files.outputs.files_changed}}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: 16
      - name: Setup dependencies
        run: yarn install
      - name: Sync files
        run: yarn sync
      - name: Check if files changed
        uses: tj-actions/verify-changed-files@v10
        id: verify-changed-files
        with:
          files: |
            architect/app/**/*
            fly/app/**/*
            netlify/app/**/*
            pages/app/**/*
            vercel/app/**/*
            workers/app/**/*
      # Commit and bail if anything changes
      - name: Commit
        uses: EndBug/add-and-commit@v9
        with:
          add: architect fly netlify pages vercel workers
          author_name: Sync Bot
          author_email: greg.huber@outlook.com
          commit: --signoff
          committer_name: Sync Bot
          committer_email: greg.huber@outlook.com
          default_author: github_actions
          message: Sync targets
        if: steps.verify-changed-files.outputs.files_changed == 'true'
      - name: Exit
        run: exit 1
        if: steps.verify-changed-files.outputs.files_changed == 'true'

  # architect:
  #   name: Publish Architect
  #   runs-on: ubuntu-latest
  #   needs: sync
  #   if: needs.sync.outputs.changed == 'false'
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
  #     - name: Setup node
  #       uses: actions/setup-node@v1
  #       with:
  #         node-version: 16
  #     - name: Setup dependencies
  #       run: yarn install
  #     - name: Publish Architect
  #       run: cd architect && echo "TODO"

  # fly:
  #   name: Publish Fly
  #   runs-on: ubuntu-latest
  #   needs: sync
  #   if: needs.sync.outputs.changed == 'false'
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
  #     - name: Setup node
  #       uses: actions/setup-node@v1
  #       with:
  #         node-version: 16
  #     - name: Setup dependencies
  #       run: yarn install
  #     - name: Publish Fly
  #       run: cd fly && echo "TODO"

  # netlify:
  #   name: Publish Netlify
  #   runs-on: ubuntu-latest
  #   needs: sync
  #   if: needs.sync.outputs.changed == 'false'
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
  #     - name: Setup node
  #       uses: actions/setup-node@v1
  #       with:
  #         node-version: 16
  #     - name: Setup dependencies
  #       run: yarn install
  #     - name: Publish Netlify
  #       run: cd netlify && echo "TODO"

  # pages:
  #   name: Publish Pages
  #   runs-on: ubuntu-latest
  #   needs: sync
  #   if: needs.sync.outputs.changed == 'false'
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
  #     - name: Setup node
  #       uses: actions/setup-node@v1
  #       with:
  #         node-version: 16
  #     - name: Setup dependencies
  #       run: yarn install
  #     - name: Publish Pages
  #       run: cd pages && echo "TODO"

  # vercel:
  #   name: Publish Vercel
  #   runs-on: ubuntu-latest
  #   needs: sync
  #   if: needs.sync.outputs.changed == 'false'
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
  #     - name: Setup node
  #       uses: actions/setup-node@v1
  #       with:
  #         node-version: 16
  #     - name: Setup dependencies
  #       run: yarn install
  #     - name: Publish Vercel
  #       run: cd vercel && echo "TODO"

  workers:
    name: Publish Worker
    runs-on: ubuntu-latest
    needs: sync
    if: needs.sync.outputs.changed == 'false'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: 16
      - name: Setup dependencies
        run: yarn install
      - name: Publish Worker
        run: cd workers && npx wrangler publish
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
